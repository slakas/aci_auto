---
#kaszlikowski.s@gmail.com
#

- name:               Dodanie VLAN POOL /
  hosts:              apics
  connection:         local
  gather_facts:       no

  vars_prompt:

  - name: "apic_username"
    prompt: "Wprowadz uzytkownika"
    private: no
  - name: "apic_userpass"
    prompt: "Wprowadz haslo"
    private: yes


  vars:
    apic_info:        &apic_info
      hostname: '{{ hostvars[inventory_hostname].apic_ip }}'
      username: '{{ apic_username }}'
      password: '{{ apic_userpass }}'
      validate_certs: no
      use_proxy: no


    tenant:
      tenant_name: POD1_T1
      vrfName: POD1_V1
      bdName: POD1_BD1

    app_profile:
      apName: POD1_APP1
      description: 'Aplikacja mieszajaca ludziom w glowie'
      epg:
        epgName: POD1_SRV21

    vlan_pools:
      vlanPoolName: POD1_Pool

    phys_dom:
        physDomName: POD1_Phy

    aep: POD1_SK-AEP

  tasks:
  # Create a snapshot
  # DOCS: https://docs.ansible.com/ansible/2.7/modules/aci_config_snapshot_module.html#aci-config-snapshot-module
  - name: Create snapshot
    aci_config_snapshot:
      <<: *apic_info
      state: present
      export_policy: config_backup
      max_count: 10
      description: snapshot (ansible)
    delegate_to: localhost

  # Create Vlan pool
  - name: Add a new {{vlan_pools.vlanPoolName}} VLAN pool
    aci_vlan_pool:
      <<: *apic_info
      pool: "{{vlan_pools.vlanPoolName}}"
      pool_allocation_mode: static
      description: POD1 SK VLANs
      state: present
    delegate_to: localhost

  # Add vlan block to vlan pool
  - name: Add to VLAN Pools {{vlan_pools.vlanPoolName}}
    aci_rest:
      <<: *apic_info
      use_proxy:      no
      path:           /api/mo/.json
      method:         post
      content:
        fvnsVlanInstP:
          attributes:
            allocMode: static
            annotation: ''
            descr: ''
            dn: uni/infra/vlanns-[{{vlan_pools.vlanPoolName}}]-static
            name: "{{vlan_pools.vlanPoolName}}"
            nameAlias: ''
            ownerKey: ''
            ownerTag: ''
            status: modified
          children:
          - fvnsEncapBlk:
              attributes:
                allocMode: static
                annotation: ''
                descr: ""
                from: 'vlan-1100'
                name: ''
                nameAlias: ''
                role: external
                to: 'vlan-1109'

  # Add vlan block to vlan pool
  - name: Add a new 1110 - 1119 VLAN encap block to {{vlan_pools.vlanPoolName}} VLAN pool
    aci_rest:
      <<: *apic_info
      use_proxy:      no
      path:           /api/mo/.json
      method:         post
      content:
        fvnsVlanInstP:
          attributes:
            allocMode: static
            annotation: ''
            descr: ''
            dn: uni/infra/vlanns-[{{vlan_pools.vlanPoolName}}]-static
            name: "{{vlan_pools.vlanPoolName}}"
            nameAlias: ''
            ownerKey: ''
            ownerTag: ''
            status: modified
          children:
          - fvnsEncapBlk:
              attributes:
                allocMode: inherit
                annotation: ''
                descr: ""
                from: 'vlan-1110'
                name: ''
                nameAlias: ''
                role: external
                to: 'vlan-1119'

  # Add a new AEP
  - name: Add a new AEP
    aci_aep:
      <<: *apic_info
      aep: '{{ aep }}'
      description: default
      state: present
    delegate_to: localhost

  # Add a new physical domain
  - name: Add a new {{phys_dom.physDomName}} physical domain
    aci_domain:
      <<: *apic_info
      domain: "{{ phys_dom.physDomName }}"
      domain_type: phys
      state: present

  # Add AEP to domain binding
  - name: Add AEP to domain binding
    aci_aep_to_domain: &binding_present
      <<: *apic_info
      aep: '{{ aep }}'
      domain: "{{ phys_dom.physDomName }}"
      domain_type: phys
      state: present
    delegate_to: localhost

  # Bind a new physical domain to VlanPool
  - name: Bind a {{phys_dom.physDomName}} physical domain to {{vlan_pools.vlanPoolName}} VLAN pool
    aci_domain_to_vlan_pool:
      <<: *apic_info
      domain: "{{phys_dom.physDomName}}"
      domain_type: phys
      pool: '{{vlan_pools.vlanPoolName}}'
      pool_allocation_mode: static
      state: present
    delegate_to: localhost

  # Interface Policy Groups -> Leaf Access Port
  # https://docs.ansible.com/ansible/latest/modules/aci_interface_policy_leaf_policy_group_module.html#aci-interface-policy-leaf-policy-group-module
  - name: Create a Leaf Access Port Policy Group
    aci_interface_policy_leaf_policy_group:
      <<: *apic_info
      lag_type: leaf
      policy_group: 'POD1_SK_eth1-1'
      description: POD1_SK_eth1/1 description
      lldp_policy: POD1_LLDP_On
      cdp_policy: POD1_CDP_ON
      aep: '{{ aep }}'
      # link_level_policy: whateverlinklevelpolicy
      state: present
    delegate_to: localhost

  # Interface Policy Groups -> VPC
  - name: Create a Virtual Port Channel (VPC) Interface Policy Group
    aci_interface_policy_leaf_policy_group:
      <<: *apic_info
      lag_type: node
      policy_group: 'POD1_SK_VPC-CH1'
      link_level_policy: '10G'
      description: POD1_SK_VPC-CH1 description
      lldp_policy: POD1_LLDP_On
      cdp_policy: POD1_CDP_ON
      port_channel_policy: POD1_SK_PortChannel_no_suspend
      aep: '{{ aep }}'
      state: present
    delegate_to: localhost

  # Add Bridge Domain
  # DOCS: https://docs.ansible.com/ansible/devel/modules/aci_bd_module.html#parameters
  - name: Add Bridge Domain {{tenant.bdName}}
    aci_bd:
      <<: *apic_info
      tenant: "{{ tenant.tenant_name }}"
      bd: "{{ tenant.bdName }}"
      vrf: "{{ tenant.vrfName }}"
      state: present
      arp_flooding: yes
      l2_unknown_unicast: flood
      enable_routing: yes

  # Create a subnet
  # https://docs.ansible.com/ansible/latest/modules/aci_bd_subnet_module.html#aci-bd-subnet-module
  - name: Create a subnet
    aci_bd_subnet:
      <<: *apic_info
      tenant: "{{ tenant.tenant_name }}"
      bd: "{{ tenant.bdName }}"
      gateway: 10.11.200.1
      mask: 24
      state: present
    delegate_to: localhost

  # Create a New App Profile
  # DOCS: https://docs.ansible.com/ansible/devel/modules/aci_ap_module.html#parameters
  - name: Create a New App Profile {{app_profile.apName}}
    aci_ap:
      <<: *apic_info
      validate_certs: no
      tenant: "{{tenant.tenant_name}}"
      ap: "{{app_profile.apName}}"
      state: present
      description: "{{app_profile.description}}"
      # name_alias: "{{app_profile.name_alias}}"

  # Create a New EPG
  # DOCS: https://docs.ansible.com/ansible/devel/modules/aci_epg_module.html#parameters
  - name: Create a New EPG {{app_profile.epg.epgName}}
    aci_epg:
      <<: *apic_info
      tenant: "{{tenant.tenant_name}}"
      ap: "{{app_profile.apName}}"
      epg: "{{app_profile.epg.epgName}}"
      bd: "{{tenant.bdName}}"
      state: present

  # Add a physical domain to the EPG
  # DOCS: https://docs.ansible.com/ansible/devel/modules/aci_epg_to_domain_module.html#parameters
  - name: Add a physical domain to EPG {{app_profile.epg.epgName}}
    aci_epg_to_domain:
      <<: *apic_info
      tenant: "{{tenant.tenant_name}}"
      ap: "{{app_profile.apName}}"
      epg: "{{app_profile.epg.epgName}}"
      domain: "{{phys_dom.physDomName}}"
      domain_type: phys
      state: present

  # Add static path to EPG
  - name: Deploy Static Path binding for given EPG {{app_profile.epg.epgName}}
    aci_static_binding_to_epg:
      <<: *apic_info
      tenant: "{{tenant.tenant_name}}"
      ap: "{{app_profile.apName}}"
      epg: "{{app_profile.epg.epgName}}"
      encap_id: 1101
      deploy_immediacy: immediate
      interface_mode: untagged
      interface_type: switch_port
      pod_id: 1
      leafs: 101
      interface: '1/1'
      state: present
    delegate_to: localhost
